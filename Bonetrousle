#include <iostream>
#include <iomanip>
#include <vector>
#include <cmath>
#include <algorithm>

unsigned long long sumFirstNums(const unsigned long long &x) 
{
  return (x * (x + 1)) / 2;
}
unsigned long long sumLastNums(const unsigned long long& lastNum, const unsigned long long& howMany) 
{
  unsigned long long returnSum = 0;
  for (unsigned long long i = 0; i < howMany; ++i) 
  {
    returnSum += lastNum - i;
  }
  return returnSum;
}
void printAnswerExtraSpace(const unsigned long long &n, const unsigned long long &k, const unsigned long long &b) 
{
  if (sumFirstNums(b) > n || sumLastNums(k, b) < n) 
  {
    std::cout << "-1";
  } 
  else 
  {
    unsigned long long sum = sumFirstNums(b);
    unsigned long long valToAdd = k + 1;
    std::vector<unsigned long long> customBoxes;
    while (sum < n) 
    {
      sum -= (b - customBoxes.size());
      valToAdd = std::min(n - sum, valToAdd-1);
      sum += valToAdd;
      customBoxes.push_back(valToAdd);
    }
    for (unsigned long long i = 0; i < (b - customBoxes.size()); ++i) 
    {
      std::cout << i+1;
      if (i != (b - customBoxes.size()-1) || customBoxes.size()) std::cout << " ";
    }
    for (unsigned long long i = 0; i < customBoxes.size(); ++i) 
    {
      std::cout << customBoxes[i];
      if (i != customBoxes.size()-1) std::cout << " ";
    }
  }
  std::cout << '\n';
}
void printAnswerConstantSpace(const unsigned long long &n, const unsigned long long &k, const unsigned long long &b) 
{
  if (sumFirstNums(b) > n || sumLastNums(k, b) < n) 
  {
    std::cout << "-1";
  } 
  else 
  {
    unsigned long long sum = sumFirstNums(b);
    unsigned long long valToAdd = k + 1;
    unsigned long long numCustomBoxes = 0;
    while (sum < n) 
    {
      sum -= (b - numCustomBoxes);
      valToAdd = std::min(n - sum, valToAdd - 1);
      std::cout << valToAdd;
      sum += valToAdd;
      numCustomBoxes++;
      if (numCustomBoxes != b) std::cout << " ";
    }
    for (unsigned long long i = 0; i < (b - numCustomBoxes); ++i) 
    {
      std::cout << i + 1;
      if (i != (b - numCustomBoxes - 1)) std::cout << " ";
    }
  }
  std::cout << '\n';
}
int main() 
{
  int t;
  std::cin >> t;
  unsigned long long n, k, b;
  std::cout << std::fixed << std::setprecision(0);
  for (int i = 0; i < t; ++i) 
  {
    std::cin >> n >> k >> b;
    printAnswerConstantSpace(n, k, b);
  }
  return 0;
}
