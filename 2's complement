#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
      
        
long long onesFromTo(long long a,long long b)
{
    long long right = 0,count = 0,countedb = 0,counteda = 0,lastbitb = 0,lastbita = 0;
    while(b!=0)
    {
        lastbitb = b&1;
        lastbita = a&1;
        count += 
            lastbitb * ((right << max(0LL,right-1LL)) + 1LL + countedb)
            - lastbita * ((right << max(0LL,right-1LL)) + counteda);
        countedb += lastbitb<<right;
        counteda += lastbita<<right;
        right++;
        a = a>>1;
        b = b>>1;
    }
    return count;
}
long long onesFromToNeg(long long a,long long b)
{
    long long count = b-a+1LL;
    a = a&~(1<<31); 
    b = b&~(1<<31); 
    count += onesFromTo(a,b);
    return count;
}
long long ones(long long a, long long b)
{
    if (a<0 && b<0)
        return(onesFromToNeg(a,b));
    else if (a<0 && b>=0)
        return onesFromToNeg(a,-1)+onesFromTo(0,b);
    else if (a>=0 && b>=0)
        return onesFromTo(a,b);
    else       
        return 0;
}
int main() 
{
    long long n;
    cin >> n;
    for(int i = 0; i< n;i++)
    {
        long long a,b;
        cin >> a;
        cin >> b;
        cout<<ones(a,b)<<endl;
    }
    return 0;
}
